<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e1867e6d-fe4c-4ee8-b5b5-d940641b9860" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/ch1/hello_world.go" beforeDir="false" afterPath="$PROJECT_DIR$/src/ch1/hello_world.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageDataManager">
    <SUITE FILE_PATH="coverage/golang$TestNotExistKeys_in_map_test_go.out" NAME="TestNotExistKeys in map_test.go Coverage Results" MODIFIED="1561086255157" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/golang$TestFbnacci_in_fibonacci_test_go.out" NAME="TestFbnacci in fibonacci_test.go Coverage Results" MODIFIED="1560438630815" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="C:\Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1eoB128hKf6ONwpe9Qe1AmuAYOs" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.gopath.indexing.explicitly.defined" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="ignore_missing_gitignore" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Build.go build golang_test/src/algorithm">
    <configuration name="go build golang_test/src/algorithm" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/src/algorithm/main.go" />
      <package value="golang_test/src/algorithm" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go build hello_world.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="golang" />
      <working_directory value="$PROJECT_DIR$/" />
      <kind value="FILE" />
      <filePath value="$PROJECT_DIR$/src/ch1/hello_world.go" />
      <directory value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="TestTimeSpend in interface_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang" />
      <working_directory value="$PROJECT_DIR$/src/ch13" />
      <go_parameters value="-i" />
      <framework value="gotest" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/src/ch13/interface_test.go" />
      <pattern value="^TestTimeSpend$" />
      <method v="2" />
    </configuration>
    <configuration name="TestTypeInter in interface_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang" />
      <working_directory value="$PROJECT_DIR$/src/ch13" />
      <go_parameters value="-i" />
      <framework value="gotest" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/src/ch13/interface_test.go" />
      <pattern value="^TestTypeInter$" />
      <method v="2" />
    </configuration>
    <configuration name="TestVarLongParam in funcAdv_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="golang" />
      <working_directory value="$PROJECT_DIR$/src/ch12" />
      <go_parameters value="-i" />
      <framework value="gotest" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/src/ch12/funcAdv_test.go" />
      <pattern value="^TestVarLongParam$" />
      <method v="2" />
    </configuration>
    <configuration name="go test golang" type="GoTestRunConfiguration" factoryName="Go Test" nameIsGenerated="true">
      <module name="golang" />
      <working_directory value="$PROJECT_DIR$/" />
      <go_parameters value="-v  -coverprofile=t.out" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build hello_world.go" />
      <item itemvalue="Go Test.go test golang" />
      <item itemvalue="Go Test.TestVarLongParam in funcAdv_test.go" />
      <item itemvalue="Go Test.TestTypeInter in interface_test.go" />
      <item itemvalue="Go Test.TestTimeSpend in interface_test.go" />
      <item itemvalue="Go Build.go build golang_test/src/algorithm" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build golang_test/src/algorithm" />
        <item itemvalue="Go Test.TestVarLongParam in funcAdv_test.go" />
        <item itemvalue="Go Build.go build hello_world.go" />
        <item itemvalue="Go Test.TestTimeSpend in interface_test.go" />
        <item itemvalue="Go Test.TestTypeInter in interface_test.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>direct</proxy>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/golang$TestVarLongParam_in_funcAdv_test_go.out" NAME="TestVarLongParam in funcAdv_test.go Coverage Results" MODIFIED="1595647630718" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>